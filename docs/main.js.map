{"version":3,"sources":["webpack:///./src/app/core/services/animations.service.ts","webpack:///./src/app/core/services/local-storage.service.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/core/services/title.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///ng://@beeman/ngx-rxdb/lib/ngx-rxdb-collection.class.ts","webpack:///ng://@beeman/ngx-rxdb/lib/ngx-rxdb.service.ts","webpack:///ng://@beeman/ngx-rxdb/lib/ngx-rxdb-collection.service.ts","webpack:///ng://@beeman/ngx-rxdb/lib/ngx-rxdb.module.ts","webpack:///./src/app/core/services/route.animations.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/app-error-handler.service.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/core/core.module.ts","webpack:///./src/main.ts","webpack:///./src/assets/logo.png"],"names":["__webpack_require__","d","__webpack_exports__","AnimationsService","routeAnimationType","isRouteAnimationsType","type","prototype","updateRouteAnimationType","pageAnimations","elementsAnimations","LocalStorageService","loadInitialState","Object","keys","localStorage","reduce","state","storageKey","includes","stateKeys_1","replace","toLowerCase","split","map","key","token","index","charAt","toUpperCase","slice","join","currentStateRef_1","forEach","length","JSON","parse","getItem","setItem","value","stringify","removeItem","testLocalStorage","retrievedValue","this","Error","MaterialModule","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_0__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_1__","add","environment","production","TitleService","title","setTitle","snapshot","lastChild","children","data","SharedModule","DEFAULT_INSTANCE_METHODS","idLength","primary","DEFAULT_COLLECTION_METHODS","countAllDocuments","find","exec","_a","sent","NgxRxdbCollectionCreator","config","assign","tslib__WEBPACK_IMPORTED_MODULE_13__","methods","statics","rxdb_plugins_core__WEBPACK_IMPORTED_MODULE_6__","plugin","rxdb_plugins_error_messages__WEBPACK_IMPORTED_MODULE_2__","rxdb_plugins_json_dump__WEBPACK_IMPORTED_MODULE_3__","rxdb_plugins_update__WEBPACK_IMPORTED_MODULE_1__","rxdb_plugins_validate__WEBPACK_IMPORTED_MODULE_4__","pouchdb_adapter_idb__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_CONFIG","name","adapter","multiInstance","queryChangeDetection","ignoreDuplicate","NgxRxdbService","_imported","window","defineProperty","dbInstance","dbInstanceObj","v","ngOnDestroy","destroy","_b","initDb","create","db","console","log","micro_dash__WEBPACK_IMPORTED_MODULE_5__","options","schemas","initCollections","dumpPath","fetch","json","dump","toString","importDbDump","error_1","Promise","all","schemaConfig","_this","createCollection","collections","error_2","dumpObj","prepareDump","importDump","timestamp","status","error_3","schema","collection","isRxCollection","remove","docsCount","parseInt","initialDocs","schemaHash","hash","encrypted","docs","getCollection","warn","getAllDocs","$","rxjs__WEBPACK_IMPORTED_MODULE_7__","dumpWithHashes","collections_1","tslib_1.__values","collections_1_1","next","done","hasOwnProperty","_angular_core__WEBPACK_IMPORTED_MODULE_14__","NgxRxdbCollectionService","dbService","_config","_collection","collectionLoaded$","_inited","asObservable","rxjs__WEBPACK_IMPORTED_MODULE_8__","then","complete","rules","sortBy","limit","pipe","rxjs_operators__WEBPACK_IMPORTED_MODULE_11__","inited","rxjs_operators__WEBPACK_IMPORTED_MODULE_12__","sort","insertLocal","id","rxjs__WEBPACK_IMPORTED_MODULE_9__","upsertLocal","getLocal","updateLocal","prop","rxjs__WEBPACK_IMPORTED_MODULE_10__","localDoc","set","save","removeLocal","insert","upsert","update","findOne","$set","doc","removeBulkBy","rulesObj","deletedDocs","_id","_rev","_deleted","pouch","bulkDocs","args","dbInitializerFactory","rxdb","injector","get","NgxRxdbModule","forFeature","ngModule","NgxRxdbFeatureModule","providers","provide","useValue","forRoot","useFactory","deps","multi","collectionService","subscribe","ROUTE_ANIMATIONS_ELEMENTS","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","_angular_animations__WEBPACK_IMPORTED_MODULE_0__","_animations_service__WEBPACK_IMPORTED_MODULE_1__","STEPS_ALL","opacity","position","optional","transform","STEPS_PAGE","STEPS_ELEMENTS","./todos/todos.module.ngfactory","webpackAsyncContext","req","ids","e","resolve","code","module","exports","_route_animations__WEBPACK_IMPORTED_MODULE_3__","AppErrorHandler","_super","call","tslib__WEBPACK_IMPORTED_MODULE_0__","handleError","error","displayMessage","_env_environment__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","AppModule","app_component_AppComponent","AppComponent","storageService","isProd","envName","version","year","Date","getFullYear","logo","navigation","link","label","navigationSideMenu","stickyHeader$","of","theme$","isIEorEdgeOrSafari","browser_detect_es5","ngOnInit","common","core","toggleTheme","_l","_v","en","$event","ad","list_typings_index_ngfactory","router","routerLink","routerLinkActive","links","linksWithHrefs","list_es5","_lines","_avatar","_icon","_ck","currVal_4","context","$implicit","target","href","button_es5","platform_es5","a11y_es5","animations","currVal_2","disabled","_animationMode","component","sidenav_typings_index_ngfactory","sidenav_es5","bidi_es5","scrolling_es5","_drawers","_content","View_AppComponent_1","ngForOf","toolbar_typings_index_ngfactory","toolbar_es5","color","_toolbarRows","button_typings_index_ngfactory","angular_fontawesome_ngfactory","angular_fontawesome","platform_browser","iconProp","View_AppComponent_2","_co","View_AppComponent_3","ngIf","_backdropOverride","_animationState","mode","fixedInViewport","fixedTopGap","fixedBottomGap","renderedIconHTML","isActivated","activatedRoute","routeConfig","path","CoreModule","parentModule","bootstrapModuleFactory","AppModuleNgFactory","catch","err","p"],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AnimationsService {\n  constructor() {\n    AnimationsService.routeAnimationType = 'NONE';\n  }\n\n  private static routeAnimationType: RouteAnimationType = 'NONE';\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(\n    pageAnimations: boolean,\n    elementsAnimations: boolean\n  ) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations\n        ? 'ALL'\n        : pageAnimations\n          ? 'PAGE'\n          : elementsAnimations\n            ? 'ELEMENTS'\n            : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = '_ngx-rxdb-';\n\n@Injectable()\nexport class LocalStorageService {\n  constructor() {}\n\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map(key =>\n            key\n              .split('-')\n              .map(\n                (token, index) =>\n                  index === 0\n                    ? token\n                    : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    let retrievedValue: string;\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSliderModule } from '@angular/material/';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBars,\n  faUserCircle,\n  faPowerOff,\n  faCog,\n  faPlayCircle,\n  faRocket,\n  faPlus,\n  faEdit,\n  faTrash,\n  faTimes,\n  faCaretUp,\n  faCaretDown,\n  faExclamationTriangle,\n  faFilter,\n  faTasks,\n  faCheck,\n  faSquare,\n  faLanguage,\n  faPaintBrush,\n  faLightbulb,\n  faWindowMaximize,\n  faStream,\n  faBook\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  faBars,\n  faUserCircle,\n  faPowerOff,\n  faCog,\n  faRocket,\n  faPlayCircle,\n  faPlus,\n  faEdit,\n  faTrash,\n  faTimes,\n  faCaretUp,\n  faCaretDown,\n  faExclamationTriangle,\n  faFilter,\n  faTasks,\n  faCheck,\n  faSquare,\n  faLanguage,\n  faPaintBrush,\n  faLightbulb,\n  faWindowMaximize,\n  faStream,\n  faBook\n);\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatSlideToggleModule,\n    MatDividerModule,\n\n    FontAwesomeModule\n  ],\n  declarations: [],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatSlideToggleModule,\n    MatDividerModule,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FontAwesomeModule\n  ]\n})\nexport class MaterialModule {}\n","export const environment = {\n  production: true\n};\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { environment as env } from '@env/environment';\n\n@Injectable()\nexport class TitleService {\n  constructor(\n    private title: Title\n  ) {}\n\n  setTitle(\n    snapshot: ActivatedRouteSnapshot,\n  ) {\n    let lastChild = snapshot;\n    while (lastChild.children.length) {\n      lastChild = lastChild.children[0];\n    }\n    const { title } = lastChild.data;\n    if (title) {\n      /* translate\n        .get(title)\n        .pipe(filter(translatedTitle => translatedTitle !== title))\n        .subscribe(translatedTitle =>\n          this.title.setTitle(`${translatedTitle} - ${'env.appName'}`)\n        ); */\n    } else {\n      this.title.setTitle('env.appName');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { BigInputComponent } from './big-input/big-input.component';\nimport { BigInputActionComponent } from './big-input/big-input-action.component';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, MaterialModule\n  ],\n  declarations: [\n    BigInputComponent,\n    BigInputActionComponent,\n  ],\n  exports: [\n    FormsModule, ReactiveFormsModule, MaterialModule,\n    BigInputComponent,\n    BigInputActionComponent,\n  ]\n})\nexport class SharedModule { }\n","// tslint:disable:ban-types\nimport { RxJsonSchema } from 'rxdb';\nimport { NgxRxdbCollectionConfig } from './ngx-rxdb.interface';\n\nfunction idLengthFn() {\n  return this.primary.length;\n}\n\nasync function countAllDocumentsFn() {\n  const allDocs = await this.find().exec();\n  return allDocs.length;\n}\n\nexport const DEFAULT_INSTANCE_METHODS: { [key: string]: Function } = {\n  idLength: idLengthFn,\n};\nexport const DEFAULT_COLLECTION_METHODS: { [key: string]: Function } = {\n  countAllDocuments: countAllDocumentsFn,\n};\n\nexport class NgxRxdbCollectionCreator implements NgxRxdbCollectionConfig {\n  name: string;\n  schema: RxJsonSchema;\n  migrationStrategies?: NgxRxdbCollectionConfig['migrationStrategies'];\n  statics?: NgxRxdbCollectionConfig['statics'];\n  methods?: NgxRxdbCollectionConfig['methods'];\n  attachments?: NgxRxdbCollectionConfig['attachments'];\n  options?: NgxRxdbCollectionConfig['options'];\n\n  constructor(config: NgxRxdbCollectionConfig) {\n    Object.assign(this, {\n      ...config,\n      methods: { ...DEFAULT_INSTANCE_METHODS, ...config.methods },\n      statics: { ...DEFAULT_COLLECTION_METHODS, ...config.statics },\n    });\n  }\n}\n","// tslint:disable:array-type member-access no-console no-string-literal interface-over-type-literal\nimport { isDevMode, Injectable, OnDestroy } from '@angular/core';\nimport * as PouchdbAdapterIdb from 'pouchdb-adapter-idb';\nimport { RxCollection, RxDatabase, RxDocument, RxJsonSchema } from 'rxdb';\nimport RxDB from 'rxdb/plugins/core';\nimport UpdatePlugin from 'rxdb/plugins/update';\nimport RxDBErrorMessagesModule from 'rxdb/plugins/error-messages';\nimport * as dumpPlugin from 'rxdb/plugins/json-dump';\nimport RxDBValidateModule from 'rxdb/plugins/validate';\nimport { Observable, of } from 'rxjs';\nimport { isEmpty } from 'micro-dash';\nimport { NgxRxdbCollectionConfig, NgxRxdbDump, NgxRxdbConfig } from './ngx-rxdb.interface';\nimport { NgxRxdbCollectionCreator } from './ngx-rxdb-collection.class';\n\nRxDB.plugin(RxDBErrorMessagesModule);\nRxDB.plugin(dumpPlugin);\nRxDB.plugin(UpdatePlugin);\nRxDB.plugin(RxDBValidateModule);\nRxDB.plugin(PouchdbAdapterIdb);\n\nconst DEFAULT_ADAPTER = 'idb';\nconst DEFAULT_CONFIG = {\n  name: 'ngx',\n  adapter: DEFAULT_ADAPTER,\n  multiInstance: false,\n  queryChangeDetection: false,\n  ignoreDuplicate: true,\n};\n\nexport type RxDbCollections = { [key: string]: RxCollection };\n\n@Injectable()\nexport class NgxRxdbService implements OnDestroy {\n  private dbInstance: RxDatabase;\n\n  get db(): RxDatabase {\n    return this.dbInstance;\n  }\n\n  set db(dbInstanceObj: RxDatabase) {\n    this.dbInstance = dbInstanceObj;\n  }\n\n  get _imported() {\n    return window.localStorage['_pouch_imported'];\n  }\n  set _imported(v) {\n    window.localStorage['_pouch_imported'] = v;\n  }\n\n  constructor() {\n    this._imported = window.localStorage['_pouch_imported'];\n  }\n\n  async ngOnDestroy() {\n    // tslint:disable-next-line:no-unused-expression\n    this.dbInstance && await this.dbInstance.destroy();\n  }\n\n  /**\n   * This is run via APP_INITIALIZER in app.module.ts\n   * to ensure the database exists before the angular-app starts up\n   */\n  async initDb(config: NgxRxdbConfig) {\n    try {\n      const db: RxDatabase = await RxDB.create<any>({\n        ...DEFAULT_CONFIG,\n        ...config\n      });\n      this.dbInstance = db;\n      console.log('RxdbService: created database');\n      // also can create collections from root config\n      if (!isEmpty(config.options) && config.options.schemas) {\n        await this.initCollections(config.options.schemas);\n        console.log('RxdbService: created collections bulk');\n      }\n      if (!isEmpty(config.options) && config.options.dumpPath) {\n        // fetch dump json\n        const dump = await (await fetch(config.options.dumpPath)).json();\n        // import only new dump\n        if (!this._imported || this._imported !== dump['timestamp'].toString()) {\n          await this.importDbDump(dump);\n        }\n      }\n    } catch (error) {\n      console.log(`RxdbService: error`, error);\n    }\n  }\n\n  async initCollections(schemas: NgxRxdbCollectionConfig[]) {\n    // wait for the array of results\n    try {\n      const collections: RxCollection[] = await Promise.all(\n        schemas.map(schemaConfig => this.createCollection(schemaConfig))\n      );\n      console.log(`RxdbService: created ${collections.length} collections`);\n      return collections;\n    } catch (error) {\n      console.log(`RxdbService: error`, error);\n    }\n  }\n\n  /**\n   * imports pouchdb dump to the database\n   * must be used only after\n   */\n  async importDbDump(dumpObj: NgxRxdbDump) {\n    try {\n      const dump = this.prepareDump(dumpObj);\n      await this.db.importDump(dump);\n      this._imported = dump.timestamp;\n    } catch (error) {\n      if (error.status !== 409) {\n        console.log(error);\n      } else {\n        // impoted but were conflicts with old docs - mark as imported\n        this._imported = dumpObj.timestamp;\n      }\n    }\n  }\n\n  async createCollection(schemaConfig: NgxRxdbCollectionConfig) {\n    if (isEmpty(schemaConfig) || isEmpty(schemaConfig.schema)) {\n      throw new Error('RxdbService: missing schema object');\n    }\n    let collection: RxCollection = this.db[name];\n    // delete collection if exists\n    if (RxDB.isRxCollection(collection)) {\n      console.log('RxdbService: collection', name, 'exists, skip create');\n      await collection.remove();\n    }\n    collection = await this.db.collection(new NgxRxdbCollectionCreator(schemaConfig));\n    console.log(`RxdbService: created collection \"${name}\"`);\n    // preload data into collection\n    const docsCount = await collection.countAllDocuments();\n    console.log(`RxdbService: collection \"${name}\" has \"${parseInt(docsCount, 0)}\" docs`);\n    if (schemaConfig.options && schemaConfig.options.initialDocs && !!!docsCount) {\n      const dumpObj = {\n        name,\n        schemaHash: collection.schema.hash,\n        encrypted: false,\n        docs: [...schemaConfig.options.initialDocs],\n      };\n      await collection.importDump(dumpObj);\n      console.log(`RxdbService: imported ${schemaConfig.options.initialDocs.length} docs for collection \"${name}\"`);\n    }\n    return collection;\n  }\n\n  getCollection(name: string): RxCollection {\n    const collection: RxCollection = this.db[name];\n    if (RxDB.isRxCollection(collection)) {\n      return collection;\n    } else {\n      console.warn(`RxdbService: returned false for RxDB.isRxCollection(${name})`);\n      return null;\n    }\n  }\n\n  getAllDocs(name: string): Observable<RxDocument<any>[]> {\n    const collection: RxCollection = this.db[name];\n    return RxDB.isRxCollection(collection) ? collection.find().$ : of([]);\n  }\n\n  /**\n   * change schemaHashes from dump to existing schema hashes\n   */\n  private prepareDump(dumpObj: NgxRxdbDump): NgxRxdbDump {\n    const dumpWithHashes = { ...dumpObj };\n    const collections = this.db.collections;\n    if (isEmpty(collections)) {\n      throw new Error('collections must be initialized before importing dump');\n    }\n    // @ts-ignore\n    for (const key of collections) {\n      if (dumpWithHashes.collections.hasOwnProperty(key)) {\n        dumpWithHashes.collections[key].schemaHash = collections[key].schema['_hash'];\n      }\n    }\n    return dumpWithHashes;\n  }\n}\n","// tslint:disable:variable-name\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { RxCollection, RxDocument, RxLocalDocument } from 'rxdb';\nimport RxDB from 'rxdb/plugins/core';\nimport { defer, from, Observable, ReplaySubject } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { NgxRxdbCollectionConfig } from './ngx-rxdb.interface';\nimport { NgxRxdbService } from './ngx-rxdb.service';\n\n@Injectable()\nexport class NgxRxdbCollectionService<T> implements OnDestroy {\n  private _config: NgxRxdbCollectionConfig;\n  private _inited: ReplaySubject<boolean>;\n  private _collection: RxCollection<T>;\n  public get collection() {\n    if (RxDB.isRxCollection(this._collection)) {\n      return this._collection;\n    } else {\n      console.warn(`RxdbService: returned false for RxDB.isRxCollection(${this._config.name})`);\n      return null;\n    }\n  }\n  public get db() {\n    return this.dbService.db;\n  }\n\n  constructor(private dbService: NgxRxdbService, @Inject('RXDB_FEATURE_CONFIG') private config: NgxRxdbCollectionConfig) {\n    this._config = config;\n  }\n\n  async ngOnDestroy() {\n    // tslint:disable-next-line:no-unused-expression\n    this.collection && await this.collection.destroy();\n  }\n\n  collectionLoaded$(): Observable<boolean> {\n    if (this._inited) {\n      return this._inited.asObservable();\n    }\n\n    this._inited = new ReplaySubject();\n\n    this.dbService.createCollection(this._config).then(collection => {\n      this._collection = collection;\n      this._inited.next(true);\n      this._inited.complete();\n    });\n\n    return this._inited.asObservable();\n  }\n\n  docs(rules?: any, sortBy?: string, limit?: number): Observable<RxDocument<T>[]> {\n    return this.collectionLoaded$().pipe(\n      filter(inited => !!inited),\n      switchMap(() => this.collection\n      .find(rules)\n      .sort(sortBy || 'primary')\n      .limit(limit)\n      .$)\n    );\n  }\n\n  insertLocal(id: string, data: any): Observable<RxLocalDocument<any>> {\n    return from(this.collection.upsertLocal(id, data));\n  }\n\n  getLocal(id: string): Observable<RxLocalDocument<any>> {\n    return from(this.collection.getLocal(id));\n  }\n\n  updateLocal(id: string, prop: string, value: any): Observable<any> {\n    return defer(async () => {\n      const localDoc = await this.collection.getLocal(id);\n      // change data\n      localDoc.set(prop, value);\n      await localDoc.save();\n    });\n  }\n\n  removeLocal(id: string): Observable<any> {\n    return defer(async () => {\n      const localDoc = await this.collection.getLocal(id);\n      return localDoc.remove();\n    });\n  }\n\n  insert(data: T): Observable<RxDocument<T>> {\n    return from(this.collection.insert(data));\n  }\n\n  upsert(data: T): Observable<RxDocument<T>> {\n    return from(this.collection.upsert(data));\n  }\n\n  update(id, data: Partial<T>): Observable<RxDocument<T>> {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      return doc.update({$set: { ...data }});\n    });\n  }\n\n  set(id, prop: string, value: any): Observable<any> {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      doc.set(prop, value);\n      return doc.save();\n    });\n  }\n\n  remove(id): Observable<any> {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      return doc.remove();\n    });\n  }\n\n  /**\n   * removes all docs by given query\n   * also represents a way ti use 'pouch.bulkDocs' with RxDb\n   */\n  removeBulkBy(rulesObj) {\n    return defer(async () => {\n      try {\n        const docs = await this.collection.find(rulesObj).exec();\n        if (docs && docs.length) {\n          // tslint:disable-next-line:no-string-literal\n          const deletedDocs = docs.map(doc => ({ _id: doc.primary, _rev: doc['_rev'], _deleted: true}));\n          return this.collection.pouch.bulkDocs(deletedDocs);\n        }\n      } catch (error) {\n        console.log(error);\n        return null;\n      }\n    });\n  }\n}\n","// tslint:disable:member-access array-type max-classes-per-file\nimport { APP_INITIALIZER, Inject, InjectionToken, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgxRxdbCollectionService } from './ngx-rxdb-collection.service';\nimport { NgxRxdbCollectionConfig, NgxRxdbConfig } from './ngx-rxdb.interface';\nimport { NgxRxdbService } from './ngx-rxdb.service';\n\nexport const RXDB_CONFIG = new InjectionToken<NgxRxdbConfig>('RXDB_CONFIG');\n\nexport function dbInitializerFactory(rxdb: NgxRxdbService, injector: Injector): any {\n  const config: NgxRxdbConfig = injector.get('RXDB_CONFIG');\n  return async () => {\n    await rxdb.initDb(config);\n  };\n}\n/**\n * main module which should be imported once in app module, will init RxDbDatabase with given configuration\n */\n@NgModule()\nexport class NgxRxdbModule {\n  constructor(private rxdb: NgxRxdbService) {}\n\n  static forFeature(config: NgxRxdbCollectionConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbFeatureModule,\n      providers: [{ provide: 'RXDB_FEATURE_CONFIG', useValue: config /* , multi: true */ }, NgxRxdbCollectionService],\n    };\n  }\n\n  static forRoot(config: NgxRxdbConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbModule,\n      providers: [\n        { provide: 'RXDB_CONFIG', useValue: config },\n        NgxRxdbService,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: dbInitializerFactory,\n          deps: [NgxRxdbService, Injector],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n}\n/**\n * feature module which should be imported in lazy feature modules, will init RxDbCollection with given configuration\n */\n@NgModule({})\nexport class NgxRxdbFeatureModule {\n  constructor( private collectionService: NgxRxdbCollectionService<any> ) {\n    // init collection via loader\n    this.collectionService.collectionLoaded$().subscribe(() => {});\n  }\n}\n","import {\n  animate,\n  query,\n  style,\n  transition,\n  trigger,\n  stagger,\n  sequence\n} from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate(\n          '0.2s ease-in-out',\n          style({ transform: 'translateY(-3%)', opacity: 0 })\n        ),\n        style({ position: 'fixed' })\n      ],\n      { optional: true }\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static'\n        }),\n        animate(\n          '0.5s ease-in-out',\n          style({ transform: 'translateY(0%)', opacity: 1 })\n        )\n      ],\n      { optional: true }\n    )\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(75, [\n      style({ transform: 'translateY(10%)', opacity: 0 }),\n      animate(\n        '0.5s ease-in-out',\n        style({ transform: 'translateY(0%)', opacity: 1 })\n      )\n    ]),\n    { optional: true }\n  )\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routeAnimations = trigger('routeAnimations', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","var map = {\n\t\"./todos/todos.module.ngfactory\": [\n\t\t\"sKb5\",\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"crnd\";\nmodule.exports = webpackAsyncContext;","// start:ng42.barrel\nexport * from './animations.service';\nexport * from './app-error-handler.service';\nexport * from './local-storage.service';\nexport * from './route.animations';\nexport * from './title.service';\n// end:ng42.barrel\n\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '@env/environment';\n\n/** Application-wide error handler that adds a UI notification to the error handling\n * provided by the default Angular ErrorHandler.\n */\n@Injectable()\nexport class AppErrorHandler extends ErrorHandler {\n  constructor(/* private notificationsService: NotificationService */) {\n    super();\n  }\n\n  handleError(error: Error | HttpErrorResponse) {\n    let displayMessage = 'An error occurred.';\n\n    if (!environment.production) {\n      displayMessage += ' See console for details.';\n    }\n\n    console.error(displayMessage);\n\n    super.handleError(error);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxRxdbModule } from '@beeman/ngx-rxdb';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: 'todos',\n    loadChildren: './todos/todos.module#TodosModule'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    CoreModule,\n    SharedModule,\n    NgxRxdbModule.forRoot({ name: 'ngx'}),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\nimport { LocalStorageService, routeAnimations } from '@app/core/services';\nimport { environment as env } from '@env/environment';\nimport browser from 'browser-detect';\nimport { Observable, of } from 'rxjs';\n\ndeclare var require: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeAnimations]\n})\nexport class AppComponent implements OnInit {\n  isProd = env.production;\n  envName = 'env.envName';\n  version = 'env.versions.app';\n  year = new Date().getFullYear();\n  logo = require('../assets/logo.png');\n  navigation = [\n    { link: 'todos', label: 'Todos' },\n  ];\n  navigationSideMenu = [\n    ...this.navigation,\n    // { link: 'settings', label: 'anms.menu.settings' }\n  ];\n\n  stickyHeader$: Observable<boolean> = of(true);\n  theme$: Observable<string> = of('default-theme'); // black-theme\n\n  constructor(\n    private storageService: LocalStorageService\n  ) {}\n\n  private static isIEorEdgeOrSafari() {\n    return ['ie', 'edge', 'safari'].includes(browser().name);\n  }\n\n  ngOnInit(): void {\n    this.storageService.testLocalStorage();\n    if (isPlatformBrowser(PLATFORM_ID) && AppComponent.isIEorEdgeOrSafari()) {\n      //\n    }\n\n  }\n\n  toggleTheme() {\n\n  }\n\n}\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\n\n  <mat-sidenav-container>\n\n    <mat-sidenav #sidenav mode=\"push\">\n      <div class=\"branding\"><img [src]=\"logo\" />\n        <span data-testid=\"title\">{{ 'Title short'}}</span></div>\n      <mat-nav-list>\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\n          routerLinkActive=\"active\">\n          {{item.label}}\n        </a>\n        <a mat-list-item href=\"https://github.com/beeman\" target=\"_blank\">\n          Github\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <div class=\"wrapper\">\n\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\" [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\n        <mat-toolbar color=\"primary\">\n          <button mat-icon-button class=\"d-md-none\" (click)=\"sidenav.open()\">\n            <fa-icon icon=\"bars\"></fa-icon>\n\n          </button>\n\n          <span class=\"example-spacer\"></span>\n\n          <span class=\"d-none d-md-inline\">\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigation\" [routerLink]=\"[item.link]\"\n              routerLinkActive=\"active\">\n              {{item.label}}\n            </button>\n          </span>\n\n          <button mat-icon-button (click)=\"toggleTheme()\" class=\"d-none d-sm-inline\">\n            <fa-icon icon=\"cog\"></fa-icon>\n          </button>\n\n        </mat-toolbar>\n      </div>\n      <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.path\">\n        <router-outlet #o=\"outlet\"></router-outlet>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"row\">\n          <div class=\"col-12 signature\">\n            &#169; <span class=\"year\" data-testid=\"footer-year\">{{year}}</span> - beeman\n            <br class=\"d-block d-sm-none\">\n            <a [matTooltip]=\"'anms.footer.changelog'\"\n               matTooltipPosition=\"before\"\n               href=\"https://github.com/beeman\">\n              <fa-icon icon=\"rocket\"></fa-icon>\n              {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </mat-sidenav-container>\n\n</div>\n","import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AnimationsService, AppErrorHandler, LocalStorageService, TitleService } from './services';\n\n\n@NgModule({\n  imports: [\n    // angular\n    CommonModule,\n    HttpClientModule,\n  ],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AnimationsService,\n    TitleService,\n    { provide: ErrorHandler, useClass: AppErrorHandler },\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","module.exports = __webpack_public_path__ + \"logo.d766b84866c84bcefb69.png\";"],"sourceRoot":""}